package 常见API练习;

public class 正则表达式练习1 {
	public static void main(String []args) {
		
		//这一段在API帮助文档里面可以去搜索Pattern这个类
		
		//正则表达式的作用
		//作用1:校验字符串是否满足规则
		//作用2:在一段文本中查找满足要求的内容
		
		//正则表达式
		
		//字符类(只匹配一个字符)
		//[abc]                 只能是a,b或者是c
		//[^abc]                除了a b c以外的任何字符
		//[a-zA-Z]             a到z A到Z 包括a z A Z
		//[a-d[m-p]]          a到d,或m到p
		//[a-z&&[def]]       a-z和def的交集.为d e f（要注意如果写成一个&,此时&就不再表示交集了,就是一个简单的&符号）
		//[a-z&&[^bc]]       a-z和非bc的交集（等同于[ad-z]  a或者d-z）
		//[a-z&&[^m-p]]    a-z和除了m到p的交集（等同于[a-lq-z]）
		
		//预定义字符(只匹配一个字符)
		//  .        任何字符
		//  \d      一个数字:[0-9]   但是要注意：\\d表示任意的一个数字,简单来说,两个\\表示一个\
		//  \D     非数字:[^0-9]
		//  \s      一个空白字符
		//  \S     非空白字符[^\s]
		//  \w     [a-zA-Z_0-9]英文,数字,下划线
		//  \W    [^\w]一个非单词字符
		
		//数量词
		//X？         X,一次或者0次
		//X*           X,零次或者多次
		//X+          X,一次或者多次
		//X{n}        X,正好n次
		//X{n,}       X,至少n次
		//X{n,m}    X,至少n但不超过m次
		
		//  \转义字符   改变后面那个字符原本的含义
		//此时\表示转义字符,改变了后面那个双引号原本的含义
		//把他变成了一个普普通通的双引号符号而已
		System.out.println("\"");
		System.out.println("--------------------------");
		
		//必须是数字 字母 下划线 至少6位
		System.out.println("2442fsfsf".matches("\\w{6,}"));//true
		System.out.println("244f".matches("\\w{6,}"));//false
	}
}
